1.정의

데이터를 조작하고 리포트를 생성하기 위해 사용하는 언어


2.형식

awk 명령어를 입력한 다음, 작은 따옴표로 둘러싸인 패턴이나 액션을 입력하고 마지막으로 입력 파일을 입력한다.
만약 입력 파일을 지정하지 않으면 키보드 입력에 의한 표준 입력(stdin)으로부터 입력을 받게 된다.
입력된 라인들의 데이터들을 공백 또는 탭을 기준으로 분리하여 $1부터 시작하는 각각의 필드 변수로 분리하여 인식한다.
(* 분리자를 지정하지 않은 경우 기본 분리자로 공백 사용)

a.파일
awk 'patten' filename
awk '{action}' filename
awk 'patten {action}' filename

b.명령어(파이프'|' 사용)
command | awk 'patten'
command | awk '{action}'
command | awk 'patten {action}'


3.동작원리

1) 파일 또는 파이프를 통해 입력 라인을 얻어와서 $0라는 내부 변수에 라인을 입력
2) 라인은 공백을 기준으로 각각의 필드나 단어로 나누어진다.($1부터 시작, 100개 이상 필드 저장 가능)
3) 내장 변수인 FS라는 필드 분리자가 있는데, 이 FS는 가장 먼저 공백(탭)을 할당(새로운 필드 분리자로 FS값 변경 가능)
4) 화면 출력(필드를 출력할 때 print 함수 사용)
5) 출력을 하고 나면 파일의 다음 라인이 호출되고 $0에 덮어쓰기(반복)


4.옵션(-f)

awk 명령을 특정한 파일에 저장해두고 이 파일에 입력된 명령을 사용하여 다른 파일을 처리하고자 할 때 사용

형식: awk -f [awk 파일명령] [awk 명령을 적용할 텍스트 파일]
예) awk -f awkcommand awk_sample.dat


5.레코드와 필드

a.레코드
- newline으로 분리
- 레코드 분리자: 디폴트로 출력과 입력 레코드 분리자(라인 분리자)는 빌트인 awk 변수 ORS와 RS에 저장되는 캐리지 리턴(newline)
- $0 변수: 모든 레코드는 awk에서 $0로 참조 예) awk '{print $0}' awk_sample.dat
- NR 변수: 레코드들의 번호는 awk의 빌트인 변수 NR에 저장 예) awk '{print NR, $0}' awk_sample.dat

b.필드
- 각 레코드는 디폴트로 공백이나 탭으로 분리된 필드라는 워드로 구성
- 빌트인 변수인 NF에 필드의 수를 유지(일반적으로 라인당 100개의 필드를 가질 수 있다.) 예) awk '{print $1, $2, $5, NF}' awk_sample.dat
- 입력 필드 분리자: 빌트인 변수 FS는 입력 필드 분리자의(default: 공백과 탭) 값을 가지고 있다. FS 값은 BEGIN 문장 또는 -F 옵션으로 변경 가능
  예) awk -F/ '{print $1, $2, $5, NF}' awk_sample.dat
  예) awk -F'[ /]' '{print $1, $2, $5, NF}' awk_sample.dat (필드 분리자 여러 개 지정)


6.패턴

정규표현식, 참과 거짓 상태의 결과 또는 이들의 결합으로 구성

a.정규표현식
- 슬래시(/)로 둘러싸인 문자들로 구성된 패턴(egrep과 동일한 정규표현식 메타문자 지원)
- awk에서 지원하지 않는 메타문자
  \<>\ :단어
  \(\) :후위 참조
  \{\} :반복
예) awk '/이 성계/' awk_sample.dat
예) awk '/^정/' awk_sample.dat

b.분기(조건문)
-if: if 문장이 참(true)이면 if 아래 문장 실행, 거짓(false)이면 else 아래 문장 실행
 예) awk '{if ( $5 > 60000 ) { print $1 } else { print $2 } }' awk_sample.dat

-loop(while, for): 표현식이 참(true)이면 loop 아래의 문장 실행
 예) awk '{ i = 1; while ( i <= NF ) { print NF, $i; i++ } }' awk_sample.dat
 예) awk '{ for ( i = 1; i <= NF; i++ ) { print NF, $i } }' awk_sample.dat

c.BEGIN
awk가 입력 파일의 라인들을 처리하기 이전에 실행되어 액션 블록 앞에 위치
내장 변수(OFS, RS, FS 등) 변경, 사용자 변수 초기화, 헤더 or 타이틀 출력
예) awk 'BEGIN{print "------------"}{ for ( i = 1; i <= NF; i++ ) { print NF, $i } }' awk_sample.dat

d.END
입력의 모든 라인이 처리된 후에 처리
예) awk 'END{print "------------"}{ for ( i = 1; i <= NF; i++ ) { print NF, $i } }' awk_sample.dat


7.액션

8.변수

a.사용자 정의
-문자
-숫자

b.내장변수

9.리다이렉션

a.출력

b.입력

10.함수

a.내장 함수

b.사용자 정의 함수

11.아규먼트

a.ARGV

b.ARGC